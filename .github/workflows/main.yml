name: Build Hugo and Deploy

on:
  push:
    branches:
      - main
#  schedule:
#    - cron: 0 16 * * *
  workflow_dispatch:
  repository_dispatch:
    types: [build-hugo]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build Hugo
        run: |
          hugo --cleanDestinationDir --forceSyncStatic --gc --ignoreCache --minify --enableGitInfo --templateMetrics --templateMetricsHints

      # - name: Setup Node LTS
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 20.x
      #     cache: yarn

      # - name: Install and run Shiki
      #   run: |
      #     export NODE_OPTIONS="--max_old_space_size=7168"
      #     yarn install
      #     yarn run syntax || true

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.personal_token }}
          external_repository: eallion/blog
          publish_branch: main
          publish_dir: ./public
          # destination_dir: public
          allow_empty_commit: true
          # commit_message: ${{ GitHub.event.head_commit.message }}
          full_commit_message: ${{ github.event.head_commit.message }}
          #cname: eallion.com
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: Onionsite Pull Webhook
        uses: eallion/fast-webhook@v1
        with:
          url: ${{ secrets.ONION_WEBHOOK_URL }}
          json: '{"onion": "pull"}'

      # - name: Algolia uploader
      #   uses: wangchucheng/algolia-uploader@master
      #   with:
      #     app_id: ${{ secrets.ALGOLIA_APPID }}
      #     admin_key: ${{ secrets.ALGOLIA_ADMIN_KEY }}
      #     index_name: eallion
      #     index_file_path: public/index.json

      # - name: Algolia uploader English
      #   uses: wangchucheng/algolia-uploader@master
      #   with:
      #     app_id: ${{ secrets.ALGOLIA_APPID }}
      #     admin_key: ${{ secrets.ALGOLIA_ADMIN_KEY }}
      #     index_name: "eallion_blog_en"
      #     index_file_path: public/en/index.json

      - name: Deploy to Aliyun OSS
        uses: fangbinwei/aliyun-oss-website-action@v1
        with:
          accessKeyId: ${{ secrets.ACCESS_KEY_ID }}
          accessKeySecret: ${{ secrets.ACCESS_KEY_SECRET }}
          bucket: eallion-com
          endpoint: oss-cn-shanghai.aliyuncs.com
          folder: public
          skipSetting: true
          # exclude: |
          #   tmp.txt

      - name: Refresh volcengine CDN
        run: |
          wget https://github.com/volcengine/volcengine-cli/releases/download/v1.0.26/volcengine-cli_1.0.26_linux_amd64.zip
          unzip volcengine-cli_1.0.26_linux_amd64.zip
          chmod a+x ./ve

          ./ve configure set --profile volcengine-hugo-github-actions --region cn-beijing --endpoint cdn.volcengineapi.com --access-key ${{ secrets.VOLC_ACCESS_KEY }} --secret-key ${{ secrets.VOLC_SECRET_KEY }}

          ./ve cdn SubmitRefreshTask --body '{"Delete":true,"Prefix":true,"Type":"dir","Urls":"https://www.eallion.com/"}'

          ./ve configure --profile volcengine-hugo-github-actions

      # - name: Upload to Tencent COS CN
      #   uses: zkqiang/tencent-cos-action@v0.1.0
      #   with:
      #     args: upload -rsf --delete ./public/ /
      #     secret_id: ${{ secrets.SECRET_COS_ID }}
      #     secret_key: ${{ secrets.SECRET_COS_KEY }}
      #     bucket: ${{ secrets.COS_CN_BUCKET }}
      #     region: ap-shanghai

      # - name: Tencent CDN Purge
      #   uses: keithnull/tencent-cloud-cdn-purge-cache@v1.0
      #   env:
      #     SECRET_ID: ${{ secrets.SECRET_COS_ID }}
      #     SECRET_KEY: ${{ secrets.SECRET_COS_KEY }}
      #     PATHS: "https://eallion.com/,https://www.eallion.com/"
      #     FLUSH_TYPE: "delete" # optional

      # - name: Install TencentCloud CLI
      #   run: |
      #     pip install tccli

      # - name: Configure Tccli Credentials
      #   run: |
      #     tccli configure set secretId ${{ secrets.TENCENTCLOUD_TEO_SECRET_ID }}
      #     tccli configure set secretKey ${{ secrets.TENCENTCLOUD_TEO_SECRET_KEY }}

      # - name: Create Tencent Cloud TEO Purge Task
      #   run: |
      #     tccli teo CreatePurgeTask --cli-unfold-argument --ZoneId ${{ secrets.TENCENTCLOUD_TEO_ZONEID }} --Type purge_prefix --Method invalidate --Targets 'https://www.eallion.com/'
