name: Build Hugo and Deploy

on:
  push:
    branches:
      - main
  schedule:
   - cron: '0 0 1 * *'
  workflow_dispatch:
  repository_dispatch:
    types: [build-hugo]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      HUGO_CACHEDIR: /tmp/.hugo_cache
      HUGOMODS_CACHEDIR: /tmp/.hugo_mods_cache
      PNPM_CACHEDIR: /tmp/.pnpm-store

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.148.2'
          extended: true

      - name: Cache Hugo Resources
        uses: actions/cache@v4
        id: cache-hugo
        with:
          path: |
            resources/_gen
            ${{ env.HUGO_CACHEDIR }}
          key: ${{ runner.os }}-hugo-${{ hashFiles('content/**', 'assets/**', 'layouts/**', 'config.toml', 'pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-hugo-

      - name: Cache Hugo Modules
        uses: actions/cache@v4
        with:
          path: ${{ env.HUGOMODS_CACHEDIR }}
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_CACHEDIR }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Run Directus sync script fetch articles
        run: |
          pnpm install
          pnpm run directus
        env:
          DIRECTUS_API_URL: ${{ secrets.DIRECTUS_API_URL }}
          DIRECTUS_FILES_URL: ${{ secrets.DIRECTUS_FILES_URL }}
          DIRECTUS_S3_URL: ${{ secrets.DIRECTUS_S3_URL }}

      - name: Build Hugo
        run: |
          hugo --minify --enableGitInfo --gc

#       - name: Install and run Shiki
#         run: |
#           export NODE_OPTIONS="--max_old_space_size=7168"
#           pnpm install
#           pnpm run shiki --silent || true
#           # npx rehype-cli public -o --silent || true

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v4
#         with:
#           personal_token: ${{ secrets.personal_token }}
#           external_repository: eallion/blog
#           publish_branch: main
#           publish_dir: ./public
#           # destination_dir: public
#           allow_empty_commit: true
#           # commit_message: ${{ GitHub.event.head_commit.message }}
#           full_commit_message: ${{ github.event.head_commit.message }}
#           #cname: eallion.com
#           force_orphan: true
#           user_name: 'github-actions[bot]'
#           user_email: 'github-actions[bot]@users.noreply.github.com'

#       - name: Publish to Cloudflare Pages
#         uses: cloudflare/wrangler-action@v3
#         with:
#           apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
#           accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
#           quiet: true
#           command: pages deploy public --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }} --commit-dirty=true

      - name: Deploy to Aliyun OSS
        if: ${{ always() && !cancelled() }}  # 只要工作流没有被取消就执行
        uses: docker://fangbinwei/aliyun-oss-website-action:v1
        env:
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          ACCESS_KEY_SECRET: ${{ secrets.ACCESS_KEY_SECRET }}
          BUCKET: eallion-com
          ENDPOINT: oss-cn-shanghai.aliyuncs.com
          FOLDER: public
          SKIP_SETTING: true
          INCREMENTAL: true

      - name: Refresh Aliyun ESA
        run: |
          pnpm run esa
        env:
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          ACCESS_KEY_SECRET: ${{ secrets.ACCESS_KEY_SECRET }}
          ESA_SITE_ID: ${{ secrets.ESA_SITE_ID }}

#       - name: Deploy to EdgeOne Pages
#         uses: TencentEdgeOne/edgeone-pages-action@v1
#         with:
#           token: ${{ secrets.EDGEONE_API_TOKEN }}
#           project-name: "eallionblog"
#           build-path: "./public"

      - name: Trigger n8n webhook
        if: success()
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.N8N_WEBHOOK_URL }}
          data: |
            {
              "deployment_status": "success",
              "repository": "${{ github.repository }}",
              "commit": "${{ github.sha }}",
              "event_name": "${{ github.event_name }}",
              "ref": "${{ github.ref }}",
              "timestamp": "${{ github.event.head_commit.timestamp }}"
            }
